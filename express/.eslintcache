[{"D:\\geekhub\\online\\todo-list\\src\\index.js":"1","D:\\geekhub\\online\\todo-list\\src\\App.js":"2","D:\\geekhub\\online\\todo-list\\src\\reportWebVitals.js":"3","D:\\geekhub\\online\\todo-list\\src\\components\\TodoList.js":"4","D:\\geekhub\\online\\todo-list\\src\\components\\TodoItem.js":"5","D:\\geekhub\\online\\todo-list\\src\\dataBase\\toolkitSlice.js":"6","D:\\geekhub\\online\\todo-list\\src\\dataBase\\base.js":"7","D:\\geekhub\\online\\todo-list\\src\\components\\Footer.js":"8","D:\\geekhub\\online\\express\\src\\index.js":"9","D:\\geekhub\\online\\express\\src\\reportWebVitals.js":"10","D:\\geekhub\\online\\express\\src\\App.js":"11","D:\\geekhub\\online\\express\\src\\components\\Footer.js":"12","D:\\geekhub\\online\\express\\src\\components\\TodoList.js":"13","D:\\geekhub\\online\\express\\src\\components\\TodoItem.js":"14","D:\\geekhub\\online\\express\\src\\dataBase\\base.js":"15","D:\\geekhub\\online\\express\\src\\dataBase\\toolkitSlice.js":"16","D:\\geekhub\\online\\express\\src\\socket.js":"17","D:\\geekhub\\online\\express\\src\\components\\Header.js":"18","D:\\geekhub\\online\\express\\src\\components\\Input.js":"19"},{"size":631,"mtime":1610977192045,"results":"20","hashOfConfig":"21"},{"size":2582,"mtime":1612910936320,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":1169,"mtime":1612910936337,"results":"24","hashOfConfig":"21"},{"size":1754,"mtime":1612910936288,"results":"25","hashOfConfig":"21"},{"size":1140,"mtime":1612556576673,"results":"26","hashOfConfig":"21"},{"size":252,"mtime":1610974443707,"results":"27","hashOfConfig":"21"},{"size":1194,"mtime":1612909978383,"results":"28","hashOfConfig":"21"},{"size":631,"mtime":1613157795310,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":2824,"mtime":1615330289933,"results":"32","hashOfConfig":"30"},{"size":1334,"mtime":1615329791518,"results":"33","hashOfConfig":"30"},{"size":1270,"mtime":1614453018883,"results":"34","hashOfConfig":"30"},{"size":2352,"mtime":1615330229119,"results":"35","hashOfConfig":"30"},{"size":252,"mtime":1610974443706,"results":"36","hashOfConfig":"30"},{"size":4973,"mtime":1615199293798,"results":"37","hashOfConfig":"30"},{"size":107,"mtime":1614368533602,"results":"38","hashOfConfig":"30"},{"size":1098,"mtime":1615329227694,"results":"39","hashOfConfig":"30"},{"size":715,"mtime":1615329589341,"results":"40","hashOfConfig":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"18g2s6z",{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"xmpk9e",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"63"},"D:\\geekhub\\online\\todo-list\\src\\index.js",[],["89","90"],"D:\\geekhub\\online\\todo-list\\src\\App.js",["91","92"],"D:\\geekhub\\online\\todo-list\\src\\reportWebVitals.js",[],"D:\\geekhub\\online\\todo-list\\src\\components\\TodoList.js",["93"],"import {TodoItem} from './TodoItem';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nexport const TodoList = (props) => {\r\n    const {list} = props;\r\n    const params = {...useParams()};\r\n    params.type = (params.data && params.data.includes(':')) ? 'id' : 'filter';\r\n\r\n    if (params.type === 'filter') {\r\n        return(\r\n            <ul className='todo-list'>\r\n                {list.map((todo, i) => {\r\n                    if (params.data === undefined || (params.data === 'active' && !todo.isDone) || (params.data === 'completed' && todo.isDone)) {\r\n                        return <TodoItem item = {todo} index = {i} key = {i} />\r\n                    }\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n    else if (params.type === 'id') {\r\n        params.data = Math.min(+params.data.match(/\\d+/)[0], list.length - 1)\r\n\r\n        return (\r\n            <ul className='todo-list'>\r\n                <TodoItem\r\n                    item = {list[params.data]}\r\n                    key = {list[params.data]}\r\n                    index = {params.data}\r\n                    isEditing = {params.isEditing}\r\n                />\r\n            </ul>\r\n        )\r\n    }\r\n}","D:\\geekhub\\online\\todo-list\\src\\components\\TodoItem.js",["94","95","96"],"import {useDispatch} from \"react-redux\";\r\nimport {useCallback} from 'react';\r\nimport {changeItemState, deleteItem, editItem} from '../dataBase/toolkitSlice';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport const TodoItem = (props) => {\r\n    const {item, index, isEditing} = props;\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const onChangeHandler = useCallback(\r\n        () => {\r\n            dispatch(changeItemState(index))\r\n        }\r\n    , [index])\r\n\r\n    const deleteHandler = useCallback(\r\n        () => {\r\n            dispatch(deleteItem(index))\r\n        }\r\n    , [index])\r\n\r\n    const itemChangeHandler = useCallback(\r\n        (event) => {\r\n            dispatch(editItem({\r\n                text: event.target.value,\r\n                index\r\n            }))\r\n        }\r\n    , [index])\r\n\r\n    const onBlurHandler = useCallback(\r\n        () => {\r\n            history.push(`/:${index}`)\r\n        }\r\n    , [history, index])\r\n\r\n    const onKeyPressHandler = useCallback(\r\n        (event) => {\r\n            if (event.key === 'Enter') {\r\n                onBlurHandler()\r\n            }\r\n        }\r\n    , [onBlurHandler])\r\n\r\n    return(\r\n        <li className={(item.isDone ? 'completed ' : '') + (isEditing ? 'editing ' : '')}>\r\n            <div className='view'>\r\n                <input className=\"toggle\" type=\"checkbox\" checked={item.isDone} onChange={onChangeHandler} />\r\n                <label>{item.text}</label>\r\n                <button className=\"destroy\" onClick={deleteHandler} />\r\n            </div>\r\n\r\n            <input type=\"text\" className='edit' autoFocus={isEditing} value={item.text} onChange={itemChangeHandler} onBlur={onBlurHandler} onKeyPress={onKeyPressHandler} />\r\n        </li>\r\n    )\r\n}","D:\\geekhub\\online\\todo-list\\src\\dataBase\\toolkitSlice.js",[],"D:\\geekhub\\online\\todo-list\\src\\dataBase\\base.js",[],"D:\\geekhub\\online\\todo-list\\src\\components\\Footer.js",["97"],"import {clearCompleted} from \"../dataBase/toolkitSlice\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useCallback} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport function Footer(props) {\r\n    const dispatch = useDispatch()\r\n    const {listLength, doneTodosAmount} = props;\r\n\r\n    const clearHandler = useCallback(\r\n        () => {\r\n            dispatch(clearCompleted())\r\n        }\r\n    , [])\r\n\r\n    return(\r\n        <footer className=\"footer\">\r\n            <span className=\"todo-count\"><strong>{listLength - doneTodosAmount}</strong> item left</span>\r\n            <ul className=\"filters\">\r\n                <li>\r\n                    <NavLink exact to=\"/\" activeClassName=\"selected\" >All</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/active\" activeClassName='selected' >Active</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/completed\" activeClassName='selected' >Completed</NavLink>\r\n                </li>\r\n            </ul>\r\n            {doneTodosAmount ? <button className=\"clear-completed\" onClick = {clearHandler}>Clear completed</button> : <></>}\r\n        </footer>\r\n    )\r\n\r\n}","D:\\geekhub\\online\\express\\src\\index.js",[],["98","99"],"D:\\geekhub\\online\\express\\src\\reportWebVitals.js",[],"D:\\geekhub\\online\\express\\src\\App.js",["100"],"D:\\geekhub\\online\\express\\src\\components\\Footer.js",["101"],"import {fetchCleared} from \"../dataBase/toolkitSlice\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useCallback} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport function Footer() {\r\n    const dispatch = useDispatch()\r\n    const listLength = useSelector(state => state.toolkit.list.length)\r\n    const doneTodosAmount = useSelector(state => state.toolkit.list.filter(item => item.isDone === true).length)\r\n\r\n    const clearHandler = useCallback(\r\n        () => {\r\n            dispatch(fetchCleared())\r\n        }\r\n    , [])\r\n\r\n    return(\r\n        <footer className=\"footer\">\r\n            <span className=\"todo-count\"><strong>{listLength - doneTodosAmount}</strong> item left</span>\r\n            <ul className=\"filters\">\r\n                <li>\r\n                    <NavLink exact to=\"/\" activeClassName=\"selected\" >All</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/active\" activeClassName='selected' >Active</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/completed\" activeClassName='selected' >Completed</NavLink>\r\n                </li>\r\n            </ul>\r\n            {doneTodosAmount ? <button className=\"clear-completed\" onClick = {clearHandler}>Clear completed</button> : <></>}\r\n        </footer>\r\n    )\r\n\r\n}","D:\\geekhub\\online\\express\\src\\components\\TodoList.js",["102"],"import {TodoItem} from './TodoItem';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nexport const TodoList = (props) => {\r\n    const {list} = props;\r\n    const params = {...useParams()};\r\n    params.type = (params.data && params.data.includes(':')) ? 'id' : 'filter';\r\n\r\n    if (params.type === 'filter') {\r\n        return(\r\n            <ul className='todo-list'>\r\n                {list.map((todo, i) => {\r\n                    if (params.data === undefined || (params.data === 'active' && !todo.isDone) || (params.data === 'completed' && todo.isDone)) {\r\n                        return <TodoItem item = {todo} index = {i} key = {todo.index} />\r\n                    }\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n    else if (params.type === 'id') {\r\n        params.data = list.length ? Math.min(+params.data.match(/\\d+/)[0], list.length - 1) : null;\r\n\r\n        return (\r\n            <ul className='todo-list'>\r\n                {params.data !== null ?\r\n                <TodoItem\r\n                    item = {list[params.data]}\r\n                    key = {list[params.data]}\r\n                    index = {params.data}\r\n                    isEditing = {params.isEditing}\r\n                /> : <></>\r\n                }\r\n            </ul>\r\n\r\n        )\r\n    }\r\n}","D:\\geekhub\\online\\express\\src\\components\\TodoItem.js",["103","104","105","106"],"import {useDispatch} from \"react-redux\";\r\nimport {useCallback} from 'react';\r\nimport {fetchItemState, fetchDeletedItem, fetchEditedItem} from '../dataBase/toolkitSlice';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport const TodoItem = (props) => {\r\n    const {item, index, isEditing} = props;\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const onChangeHandler = useCallback(\r\n        () => {\r\n            dispatch(fetchItemState(index))\r\n        }\r\n    , [index])\r\n\r\n    const deleteHandler = useCallback(\r\n        () => {\r\n            dispatch(fetchDeletedItem(index))\r\n        }\r\n    , [index])\r\n\r\n    const itemChangeHandler = useCallback(\r\n        (event) => {\r\n            const text = event.target.value\r\n            const body = {\r\n                index,\r\n                text,\r\n            }\r\n            dispatch(fetchEditedItem(body))\r\n        }\r\n    , [index])\r\n\r\n    const onBlurHandler = useCallback(\r\n        () => {\r\n            history.push(`/:${index}`)\r\n        }\r\n    , [history, index])\r\n\r\n    const onKeyPressHandler = useCallback(\r\n        (event) => {\r\n            if (event.key === 'Enter') {\r\n                onBlurHandler()\r\n\r\n                if (!event.target.value) {\r\n                    dispatch(fetchDeletedItem(index))\r\n                }\r\n            }\r\n        }\r\n    , [onBlurHandler])\r\n\r\n    return(\r\n        <li className={(item.isDone ? 'completed ' : '') + (isEditing ? 'editing ' : '')}>\r\n            <div className='view'>\r\n                {\r\n                    !item.hasOwnProperty('unSaved') ? <input className=\"toggle\" type=\"checkbox\" checked={item.isDone} onChange={onChangeHandler} />\r\n                    : <input className=\"toggle\" type=\"checkbox\" checked={item.isDone} readOnly />\r\n                }\r\n                <label>{item.text}</label>\r\n                {\r\n                    !item.hasOwnProperty('unSaved') ? <button className=\"destroy\" onClick={deleteHandler} />\r\n                    : <button className=\"destroy\"/>\r\n                }\r\n            </div>\r\n\r\n            {\r\n                !item.hasOwnProperty('unSaved') ? <input type=\"text\" className='edit' autoFocus={isEditing} value={item.text} onChange={itemChangeHandler} onBlur={onBlurHandler} onKeyPress={onKeyPressHandler} />\r\n                : <></>\r\n            }\r\n        </li>\r\n    )\r\n}","D:\\geekhub\\online\\express\\src\\dataBase\\base.js",[],"D:\\geekhub\\online\\express\\src\\dataBase\\toolkitSlice.js",[],"D:\\geekhub\\online\\express\\src\\socket.js",[],"D:\\geekhub\\online\\express\\src\\components\\Header.js",["107","108"],"import {useDispatch, useSelector} from \"react-redux\";\r\nimport {useCallback} from \"react\";\r\nimport {sendTodo, sendUnSavedText} from \"../dataBase/toolkitSlice\";\r\n\r\nexport function Header({parentState}) {\r\n    const error = useSelector(state => state.toolkit.error)\r\n    const dispatch = useDispatch()\r\n\r\n    const keyPressHandler = useCallback((e) => {\r\n        if (e.key === 'Enter' && e.target.value) {\r\n            parentState.isTyping = false;\r\n            dispatch(sendTodo(e.target.value))\r\n            e.target.value = ''\r\n        }\r\n    }, [])\r\n\r\n    const onChangeHandler = useCallback((e) => {\r\n        parentState.isTyping = true;\r\n        dispatch(sendUnSavedText(e.target.value))\r\n    }, [])\r\n\r\n    return(\r\n        <header className=\"header\">\r\n            <h1>todos</h1>\r\n            {!!error && <p className='error-text'>{error}</p>}\r\n            <input className=\"new-todo\" type=\"text\" placeholder=\"What needs to be done?\"\r\n                   autoFocus={!parentState.isEditing}\r\n                   onChange={onChangeHandler} onKeyPress={keyPressHandler}/>\r\n        </header>\r\n    )\r\n}","D:\\geekhub\\online\\express\\src\\components\\Input.js",["109"],"import {useCallback} from \"react\";\r\nimport {fetchAllStates} from \"../dataBase/toolkitSlice\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport function Input({parentState}) {\r\n    const dispatch = useDispatch()\r\n\r\n    const stateChanger = useCallback(\r\n        () => {\r\n            parentState.isMarked = !parentState.isMarked;\r\n            dispatch(fetchAllStates(parentState.isMarked))\r\n        }\r\n        , [parentState.isMarked])\r\n\r\n    return(\r\n        <>\r\n            <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\"\r\n                   checked={parentState.isMarked} readOnly/>\r\n            <label htmlFor=\"toggle-all\" onClick={stateChanger}>Mark all as complete</label>\r\n        </>\r\n    )\r\n}",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":24,"column":8,"nodeType":"116","endLine":24,"endColumn":10,"suggestions":"117"},{"ruleId":"114","severity":1,"message":"118","line":31,"column":7,"nodeType":"116","endLine":31,"endColumn":23,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":12,"column":37,"nodeType":"122","messageId":"123","endLine":12,"endColumn":39},{"ruleId":"114","severity":1,"message":"115","line":20,"column":7,"nodeType":"116","endLine":20,"endColumn":14,"suggestions":"124"},{"ruleId":"114","severity":1,"message":"115","line":26,"column":7,"nodeType":"116","endLine":26,"endColumn":14,"suggestions":"125"},{"ruleId":"114","severity":1,"message":"115","line":35,"column":7,"nodeType":"116","endLine":35,"endColumn":14,"suggestions":"126"},{"ruleId":"114","severity":1,"message":"115","line":14,"column":7,"nodeType":"116","endLine":14,"endColumn":9,"suggestions":"127"},{"ruleId":"110","replacedBy":"128"},{"ruleId":"112","replacedBy":"129"},{"ruleId":"114","severity":1,"message":"130","line":62,"column":7,"nodeType":"116","endLine":62,"endColumn":9,"suggestions":"131"},{"ruleId":"114","severity":1,"message":"115","line":15,"column":7,"nodeType":"116","endLine":15,"endColumn":9,"suggestions":"132"},{"ruleId":"120","severity":1,"message":"121","line":12,"column":37,"nodeType":"122","messageId":"123","endLine":12,"endColumn":39},{"ruleId":"114","severity":1,"message":"115","line":16,"column":7,"nodeType":"116","endLine":16,"endColumn":14,"suggestions":"133"},{"ruleId":"114","severity":1,"message":"115","line":22,"column":7,"nodeType":"116","endLine":22,"endColumn":14,"suggestions":"134"},{"ruleId":"114","severity":1,"message":"115","line":33,"column":7,"nodeType":"116","endLine":33,"endColumn":14,"suggestions":"135"},{"ruleId":"114","severity":1,"message":"136","line":51,"column":7,"nodeType":"116","endLine":51,"endColumn":22,"suggestions":"137"},{"ruleId":"114","severity":1,"message":"138","line":15,"column":8,"nodeType":"116","endLine":15,"endColumn":10,"suggestions":"139"},{"ruleId":"114","severity":1,"message":"138","line":20,"column":8,"nodeType":"116","endLine":20,"endColumn":10,"suggestions":"140"},{"ruleId":"114","severity":1,"message":"138","line":13,"column":11,"nodeType":"116","endLine":13,"endColumn":33,"suggestions":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["144"],"React Hook useCallback has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["145"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["146"],["147"],["148"],["149"],["142"],["143"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["150"],["151"],["152"],["153"],["154"],"React Hook useCallback has missing dependencies: 'dispatch' and 'index'. Either include them or remove the dependency array.",["155"],"React Hook useCallback has missing dependencies: 'dispatch' and 'parentState'. Either include them or remove the dependency array.",["156"],["157"],["158"],"no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"163","fix":"165"},{"desc":"163","fix":"166"},{"desc":"159","fix":"167"},{"desc":"159","fix":"168"},{"desc":"159","fix":"169"},{"desc":"163","fix":"170"},{"desc":"163","fix":"171"},{"desc":"163","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"175","fix":"177"},{"desc":"175","fix":"178"},"Update the dependencies array to be: [dispatch]",{"range":"179","text":"180"},"Update the dependencies array to be: [dispatch, state]",{"range":"181","text":"182"},"Update the dependencies array to be: [dispatch, index]",{"range":"183","text":"184"},{"range":"185","text":"184"},{"range":"186","text":"184"},{"range":"187","text":"180"},{"range":"188","text":"180"},{"range":"189","text":"180"},{"range":"190","text":"184"},{"range":"191","text":"184"},{"range":"192","text":"184"},"Update the dependencies array to be: [dispatch, index, onBlurHandler]",{"range":"193","text":"194"},"Update the dependencies array to be: [dispatch, parentState]",{"range":"195","text":"196"},{"range":"197","text":"196"},{"range":"198","text":"196"},[818,820],"[dispatch]",[994,1010],"[dispatch, state]",[563,570],"[dispatch, index]",[690,697],[901,908],[415,417],[1719,1721],[555,557],[499,506],[632,639],[907,914],[1347,1362],"[dispatch, index, onBlurHandler]",[546,548],"[dispatch, parentState]",[699,701],[412,434]]