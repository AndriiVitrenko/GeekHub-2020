[{"D:\\geekhub\\online\\todo-list\\src\\index.js":"1","D:\\geekhub\\online\\todo-list\\src\\App.js":"2","D:\\geekhub\\online\\todo-list\\src\\reportWebVitals.js":"3","D:\\geekhub\\online\\todo-list\\src\\components\\TodoList.js":"4","D:\\geekhub\\online\\todo-list\\src\\components\\TodoItem.js":"5","D:\\geekhub\\online\\todo-list\\src\\dataBase\\toolkitSlice.js":"6","D:\\geekhub\\online\\todo-list\\src\\dataBase\\base.js":"7","D:\\geekhub\\online\\todo-list\\src\\components\\Footer.js":"8","D:\\geekhub\\online\\express\\src\\index.js":"9","D:\\geekhub\\online\\express\\src\\reportWebVitals.js":"10","D:\\geekhub\\online\\express\\src\\App.js":"11","D:\\geekhub\\online\\express\\src\\components\\Footer.js":"12","D:\\geekhub\\online\\express\\src\\components\\TodoList.js":"13","D:\\geekhub\\online\\express\\src\\components\\TodoItem.js":"14","D:\\geekhub\\online\\express\\src\\dataBase\\base.js":"15","D:\\geekhub\\online\\express\\src\\dataBase\\toolkitSlice.js":"16","D:\\geekhub\\online\\express\\src\\actions\\index.js":"17"},{"size":631,"mtime":1610977192045,"results":"18","hashOfConfig":"19"},{"size":2582,"mtime":1612910936320,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":1169,"mtime":1612910936337,"results":"22","hashOfConfig":"19"},{"size":1754,"mtime":1612910936288,"results":"23","hashOfConfig":"19"},{"size":1140,"mtime":1612556576673,"results":"24","hashOfConfig":"19"},{"size":252,"mtime":1610974443707,"results":"25","hashOfConfig":"19"},{"size":1194,"mtime":1612909978383,"results":"26","hashOfConfig":"19"},{"size":631,"mtime":1613157795310,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":3219,"mtime":1613409377161,"results":"30","hashOfConfig":"28"},{"size":1400,"mtime":1613409377128,"results":"31","hashOfConfig":"28"},{"size":1261,"mtime":1613327762726,"results":"32","hashOfConfig":"28"},{"size":2419,"mtime":1613409377178,"results":"33","hashOfConfig":"28"},{"size":252,"mtime":1610974443706,"results":"34","hashOfConfig":"28"},{"size":1159,"mtime":1613409377145,"results":"35","hashOfConfig":"28"},{"size":2072,"mtime":1613409529565,"results":"36","hashOfConfig":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"18g2s6z",{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"xmpk9e",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\geekhub\\online\\todo-list\\src\\index.js",[],["81","82"],"D:\\geekhub\\online\\todo-list\\src\\App.js",["83","84"],"D:\\geekhub\\online\\todo-list\\src\\reportWebVitals.js",[],"D:\\geekhub\\online\\todo-list\\src\\components\\TodoList.js",["85"],"import {TodoItem} from './TodoItem';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nexport const TodoList = (props) => {\r\n    const {list} = props;\r\n    const params = {...useParams()};\r\n    params.type = (params.data && params.data.includes(':')) ? 'id' : 'filter';\r\n\r\n    if (params.type === 'filter') {\r\n        return(\r\n            <ul className='todo-list'>\r\n                {list.map((todo, i) => {\r\n                    if (params.data === undefined || (params.data === 'active' && !todo.isDone) || (params.data === 'completed' && todo.isDone)) {\r\n                        return <TodoItem item = {todo} index = {i} key = {i} />\r\n                    }\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n    else if (params.type === 'id') {\r\n        params.data = Math.min(+params.data.match(/\\d+/)[0], list.length - 1)\r\n\r\n        return (\r\n            <ul className='todo-list'>\r\n                <TodoItem\r\n                    item = {list[params.data]}\r\n                    key = {list[params.data]}\r\n                    index = {params.data}\r\n                    isEditing = {params.isEditing}\r\n                />\r\n            </ul>\r\n        )\r\n    }\r\n}","D:\\geekhub\\online\\todo-list\\src\\components\\TodoItem.js",["86","87","88"],"import {useDispatch} from \"react-redux\";\r\nimport {useCallback} from 'react';\r\nimport {changeItemState, deleteItem, editItem} from '../dataBase/toolkitSlice';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport const TodoItem = (props) => {\r\n    const {item, index, isEditing} = props;\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const onChangeHandler = useCallback(\r\n        () => {\r\n            dispatch(changeItemState(index))\r\n        }\r\n    , [index])\r\n\r\n    const deleteHandler = useCallback(\r\n        () => {\r\n            dispatch(deleteItem(index))\r\n        }\r\n    , [index])\r\n\r\n    const itemChangeHandler = useCallback(\r\n        (event) => {\r\n            dispatch(editItem({\r\n                text: event.target.value,\r\n                index\r\n            }))\r\n        }\r\n    , [index])\r\n\r\n    const onBlurHandler = useCallback(\r\n        () => {\r\n            history.push(`/:${index}`)\r\n        }\r\n    , [history, index])\r\n\r\n    const onKeyPressHandler = useCallback(\r\n        (event) => {\r\n            if (event.key === 'Enter') {\r\n                onBlurHandler()\r\n            }\r\n        }\r\n    , [onBlurHandler])\r\n\r\n    return(\r\n        <li className={(item.isDone ? 'completed ' : '') + (isEditing ? 'editing ' : '')}>\r\n            <div className='view'>\r\n                <input className=\"toggle\" type=\"checkbox\" checked={item.isDone} onChange={onChangeHandler} />\r\n                <label>{item.text}</label>\r\n                <button className=\"destroy\" onClick={deleteHandler} />\r\n            </div>\r\n\r\n            <input type=\"text\" className='edit' autoFocus={isEditing} value={item.text} onChange={itemChangeHandler} onBlur={onBlurHandler} onKeyPress={onKeyPressHandler} />\r\n        </li>\r\n    )\r\n}","D:\\geekhub\\online\\todo-list\\src\\dataBase\\toolkitSlice.js",[],"D:\\geekhub\\online\\todo-list\\src\\dataBase\\base.js",[],"D:\\geekhub\\online\\todo-list\\src\\components\\Footer.js",["89"],"import {clearCompleted} from \"../dataBase/toolkitSlice\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useCallback} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport function Footer(props) {\r\n    const dispatch = useDispatch()\r\n    const {listLength, doneTodosAmount} = props;\r\n\r\n    const clearHandler = useCallback(\r\n        () => {\r\n            dispatch(clearCompleted())\r\n        }\r\n    , [])\r\n\r\n    return(\r\n        <footer className=\"footer\">\r\n            <span className=\"todo-count\"><strong>{listLength - doneTodosAmount}</strong> item left</span>\r\n            <ul className=\"filters\">\r\n                <li>\r\n                    <NavLink exact to=\"/\" activeClassName=\"selected\" >All</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/active\" activeClassName='selected' >Active</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/completed\" activeClassName='selected' >Completed</NavLink>\r\n                </li>\r\n            </ul>\r\n            {doneTodosAmount ? <button className=\"clear-completed\" onClick = {clearHandler}>Clear completed</button> : <></>}\r\n        </footer>\r\n    )\r\n\r\n}","D:\\geekhub\\online\\express\\src\\index.js",[],["90","91"],"D:\\geekhub\\online\\express\\src\\reportWebVitals.js",[],"D:\\geekhub\\online\\express\\src\\App.js",["92","93","94"],"import {useState, useCallback, useEffect} from 'react';\nimport {TodoList} from \"./components/TodoList\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addTodo, changeAllStates, setList} from \"./dataBase/toolkitSlice\";\nimport {getTodoList, newTodo, toggleAllItemsState} from \"./actions\";\nimport {Footer} from \"./components/Footer\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nfunction App() {\n    const dispatch = useDispatch()\n\n    useEffect(\n        () => {\n            getTodoList()\n                .then(result => {\n                    dispatch(setList({list: result.list}))\n                })\n        }\n    , [])\n\n    const todoList = useSelector(state => state.toolkit.list)\n    const doneTodosAmount = todoList.filter(todo => todo.isDone === true).length;\n\n    const [state] = useState({\n        filter: 'all',\n        isMarked: false,\n        isEditing: false,\n    })\n\n    const keyPressHandler = useCallback((e) => {\n        if (e.key === 'Enter') {\n            const text = e.target.value;\n            newTodo(text)\n                .then((res) => {\n                    if (res.ok) {\n                        dispatch(addTodo(text));\n                        e.target.value = ''\n                    }\n                })\n        }\n    }, [])\n\n    const stateChanger = useCallback(\n        () => {\n            state.isMarked = !state.isMarked;\n            toggleAllItemsState(state.isMarked)\n                .then((res) => {\n                    if (res.ok) {\n                        dispatch(changeAllStates(state.isMarked))\n                    }\n                })\n        }\n    , [state.isMarked])\n\n    return (\n        <>\n            <section className=\"todoapp\">\n                <header className=\"header\">\n                    <h1>todos</h1>\n                    <input className=\"new-todo\" type=\"text\" placeholder=\"What needs to be done?\" autoFocus={!state.isEditing}\n                           onKeyPress={keyPressHandler}/>\n                </header>\n                <section className=\"main\">\n                    <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\"\n                           checked={state.isMarked || (doneTodosAmount === todoList.length)} readOnly/>\n                    <label htmlFor=\"toggle-all\" onClick={stateChanger}>Mark all as complete</label>\n\n                    <Router>\n                        <Switch>\n                            <Route exact path='/:data([a-zA-z]+|:\\d+)?' >\n                                <TodoList\n                                    list={todoList}\n                                />\n                            </Route>\n\n                            <Route exact path='/:data(:\\d+)/:isEditing(edit)?' >\n                                <TodoList\n                                    list={todoList}\n                                />\n                            </Route>\n                        </Switch>\n\n                        <Footer\n                            listLength={todoList.length}\n                            doneTodosAmount={doneTodosAmount}\n                        />\n                    </Router>\n                </section>\n            </section>\n        </>\n    );\n}\n\nexport default App\n","D:\\geekhub\\online\\express\\src\\components\\Footer.js",["95"],"import {clearCompleted} from \"../dataBase/toolkitSlice\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useCallback} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {clearAllCompleted} from \"../actions\";\r\n\r\nexport function Footer(props) {\r\n    const dispatch = useDispatch()\r\n    const {listLength, doneTodosAmount} = props;\r\n\r\n    const clearHandler = useCallback(\r\n        () => {\r\n            clearAllCompleted()\r\n                .then((res) => {\r\n                    if (res.ok) {\r\n                        dispatch(clearCompleted())\r\n                    }\r\n                })\r\n\r\n        }\r\n    , [])\r\n\r\n    return(\r\n        <footer className=\"footer\">\r\n            <span className=\"todo-count\"><strong>{listLength - doneTodosAmount}</strong> item left</span>\r\n            <ul className=\"filters\">\r\n                <li>\r\n                    <NavLink exact to=\"/\" activeClassName=\"selected\" >All</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/active\" activeClassName='selected' >Active</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/completed\" activeClassName='selected' >Completed</NavLink>\r\n                </li>\r\n            </ul>\r\n            {doneTodosAmount ? <button className=\"clear-completed\" onClick = {clearHandler}>Clear completed</button> : <></>}\r\n        </footer>\r\n    )\r\n\r\n}","D:\\geekhub\\online\\express\\src\\components\\TodoList.js",["96"],"import {TodoItem} from './TodoItem';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nexport const TodoList = (props) => {\r\n    const {list} = props;\r\n    const params = {...useParams()};\r\n    params.type = (params.data && params.data.includes(':')) ? 'id' : 'filter';\r\n\r\n    if (params.type === 'filter') {\r\n        return(\r\n            <ul className='todo-list'>\r\n                {list.map((todo, i) => {\r\n                    if (params.data === undefined || (params.data === 'active' && !todo.isDone) || (params.data === 'completed' && todo.isDone)) {\r\n                        return <TodoItem item = {todo} index = {i} key = {i} />\r\n                    }\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n    else if (params.type === 'id') {\r\n        params.data = list.length ? Math.min(+params.data.match(/\\d+/)[0], list.length - 1) : null;\r\n\r\n        return (\r\n            <ul className='todo-list'>\r\n                {params.data !== null ?\r\n                <TodoItem\r\n                    item = {list[params.data]}\r\n                    key = {list[params.data]}\r\n                    index = {params.data}\r\n                    isEditing = {params.isEditing}\r\n                /> : <></>\r\n                }\r\n            </ul>\r\n\r\n        )\r\n    }\r\n}","D:\\geekhub\\online\\express\\src\\components\\TodoItem.js",["97","98","99"],"import {useDispatch} from \"react-redux\";\r\nimport {useCallback} from 'react';\r\nimport {changeItemState, deleteItem, editItem} from '../dataBase/toolkitSlice';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {toggleItemState, deleteOneItem, editItemText} from \"../actions\";\r\n\r\nexport const TodoItem = (props) => {\r\n    const {item, index, isEditing} = props;\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const onChangeHandler = useCallback(\r\n        () => {\r\n            toggleItemState(index)\r\n                .then((res) => {\r\n                    if (res.ok) {\r\n                        dispatch(changeItemState(index))\r\n                    }\r\n                })\r\n        }\r\n    , [index])\r\n\r\n    const deleteHandler = useCallback(\r\n        () => {\r\n            deleteOneItem(index)\r\n                .then((res) => {\r\n                    if (res.ok) {\r\n                        dispatch(deleteItem(index))\r\n                    }\r\n                })\r\n        }\r\n    , [index])\r\n\r\n    const itemChangeHandler = useCallback(\r\n        (event) => {\r\n            editItemText({\r\n                index,\r\n                text: event.target.value,\r\n            })\r\n                .then((res) => {\r\n                    if (res.ok) {\r\n                        dispatch(editItem({\r\n                            text: event.target.value,\r\n                            index\r\n                        }))\r\n                    }\r\n                })\r\n\r\n        }\r\n    , [index])\r\n\r\n    const onBlurHandler = useCallback(\r\n        () => {\r\n            history.push(`/:${index}`)\r\n        }\r\n    , [history, index])\r\n\r\n    const onKeyPressHandler = useCallback(\r\n        (event) => {\r\n            if (event.key === 'Enter') {\r\n                onBlurHandler()\r\n            }\r\n        }\r\n    , [onBlurHandler])\r\n\r\n    return(\r\n        <li className={(item.isDone ? 'completed ' : '') + (isEditing ? 'editing ' : '')}>\r\n            <div className='view'>\r\n                <input className=\"toggle\" type=\"checkbox\" checked={item.isDone} onChange={onChangeHandler} />\r\n                <label>{item.text}</label>\r\n                <button className=\"destroy\" onClick={deleteHandler} />\r\n            </div>\r\n\r\n            <input type=\"text\" className='edit' autoFocus={isEditing} value={item.text} onChange={itemChangeHandler} onBlur={onBlurHandler} onKeyPress={onKeyPressHandler} />\r\n        </li>\r\n    )\r\n}",["100","101"],"D:\\geekhub\\online\\express\\src\\dataBase\\base.js",[],"D:\\geekhub\\online\\express\\src\\dataBase\\toolkitSlice.js",[],"D:\\geekhub\\online\\express\\src\\actions\\index.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":24,"column":8,"nodeType":"108","endLine":24,"endColumn":10,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":31,"column":7,"nodeType":"108","endLine":31,"endColumn":23,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":12,"column":37,"nodeType":"114","messageId":"115","endLine":12,"endColumn":39},{"ruleId":"106","severity":1,"message":"107","line":20,"column":7,"nodeType":"108","endLine":20,"endColumn":14,"suggestions":"116"},{"ruleId":"106","severity":1,"message":"107","line":26,"column":7,"nodeType":"108","endLine":26,"endColumn":14,"suggestions":"117"},{"ruleId":"106","severity":1,"message":"107","line":35,"column":7,"nodeType":"108","endLine":35,"endColumn":14,"suggestions":"118"},{"ruleId":"106","severity":1,"message":"107","line":14,"column":7,"nodeType":"108","endLine":14,"endColumn":9,"suggestions":"119"},{"ruleId":"102","replacedBy":"120"},{"ruleId":"104","replacedBy":"121"},{"ruleId":"106","severity":1,"message":"122","line":19,"column":7,"nodeType":"108","endLine":19,"endColumn":9,"suggestions":"123"},{"ruleId":"106","severity":1,"message":"107","line":41,"column":8,"nodeType":"108","endLine":41,"endColumn":10,"suggestions":"124"},{"ruleId":"106","severity":1,"message":"110","line":53,"column":7,"nodeType":"108","endLine":53,"endColumn":23,"suggestions":"125"},{"ruleId":"106","severity":1,"message":"107","line":21,"column":7,"nodeType":"108","endLine":21,"endColumn":9,"suggestions":"126"},{"ruleId":"112","severity":1,"message":"113","line":12,"column":37,"nodeType":"114","messageId":"115","endLine":12,"endColumn":39},{"ruleId":"106","severity":1,"message":"107","line":22,"column":7,"nodeType":"108","endLine":22,"endColumn":14,"suggestions":"127"},{"ruleId":"106","severity":1,"message":"107","line":33,"column":7,"nodeType":"108","endLine":33,"endColumn":14,"suggestions":"128"},{"ruleId":"106","severity":1,"message":"107","line":51,"column":7,"nodeType":"108","endLine":51,"endColumn":14,"suggestions":"129"},{"ruleId":"102","replacedBy":"130"},{"ruleId":"104","replacedBy":"131"},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["134"],"React Hook useCallback has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["135"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["136"],["137"],["138"],["139"],["132"],["133"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["140"],["141"],["142"],["143"],["144"],["145"],["146"],["132"],["133"],"no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"151","fix":"153"},{"desc":"151","fix":"154"},{"desc":"147","fix":"155"},{"desc":"147","fix":"156"},{"desc":"147","fix":"157"},{"desc":"149","fix":"158"},{"desc":"147","fix":"159"},{"desc":"151","fix":"160"},{"desc":"151","fix":"161"},{"desc":"151","fix":"162"},"Update the dependencies array to be: [dispatch]",{"range":"163","text":"164"},"Update the dependencies array to be: [dispatch, state]",{"range":"165","text":"166"},"Update the dependencies array to be: [dispatch, index]",{"range":"167","text":"168"},{"range":"169","text":"168"},{"range":"170","text":"168"},{"range":"171","text":"164"},{"range":"172","text":"164"},{"range":"173","text":"164"},{"range":"174","text":"166"},{"range":"175","text":"164"},{"range":"176","text":"168"},{"range":"177","text":"168"},{"range":"178","text":"168"},[818,820],"[dispatch]",[994,1010],"[dispatch, state]",[563,570],"[dispatch, index]",[690,697],[901,908],[415,417],[658,660],[1288,1290],[1631,1647],[621,623],[722,729],[1007,1014],[1491,1498]]